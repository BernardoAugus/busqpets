{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/bernardosalgado/Desktop/busqpets/template/imports/ui/DadosPessoais.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions",["flow",{}],"nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}]],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"sourceFileName":"/Users/bernardosalgado/Desktop/busqpets/template/imports/ui/DadosPessoais.vue","filename":"/Users/bernardosalgado/Desktop/busqpets/template/imports/ui/DadosPessoais.vue","passPerPreset":false,"envName":"development","cwd":"/Users/bernardosalgado/Desktop/busqpets/template","root":"/Users/bernardosalgado/Desktop/busqpets/template","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.7.6","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"TSModuleBlock":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/bernardosalgado/Desktop/busqpets/template/imports/ui/DadosPessoais.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/Users/bernardosalgado/Desktop/busqpets/template/imports/ui/DadosPessoais.vue"}},"code":"var _regeneratorRuntime;\n\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 0);\nvar QInput;\nmodule.link(\"quasar\", {\n  QInput: function (v) {\n    QInput = v;\n  }\n}, 0);\nmodule.exportDefault({\n  components: {\n    QInput: QInput\n  },\n  data: function () {\n    return {\n      states: [{\n        value: 'AC',\n        label: 'Acre'\n      }, {\n        value: 'AL',\n        label: 'Alagoas'\n      }, {\n        value: 'AP',\n        label: 'Amapá'\n      }, {\n        value: 'AM',\n        label: 'Amazonas'\n      }, {\n        value: 'BA',\n        label: 'Bahia'\n      }, {\n        value: 'CE',\n        label: 'Ceará'\n      }, {\n        value: 'DF',\n        label: 'Distrito Federal'\n      }, {\n        value: 'ES',\n        label: 'Espírito Santo'\n      }, {\n        value: 'GO',\n        label: 'Goías'\n      }, {\n        value: 'MA',\n        label: 'Maranhão'\n      }, {\n        value: 'MT',\n        label: 'Mato Grosso'\n      }, {\n        value: 'MS',\n        label: 'Mato Grosso do Sul'\n      }, {\n        value: 'MG',\n        label: 'Minas Gerais'\n      }, {\n        value: 'PA',\n        label: 'Pará'\n      }, {\n        value: 'PB',\n        label: 'Paraíba'\n      }, {\n        value: 'PR',\n        label: 'Paraná'\n      }, {\n        value: 'PE',\n        label: 'Pernambuco'\n      }, {\n        value: 'PI',\n        label: 'Piauí'\n      }, {\n        value: 'RJ',\n        label: 'Rio de Janeiro'\n      }, {\n        value: 'RN',\n        label: 'Rio Grande do Norte'\n      }, {\n        value: 'RS',\n        label: 'Rio Grande do Sul'\n      }, {\n        value: 'RO',\n        label: 'Rondônia'\n      }, {\n        value: 'RR',\n        label: 'Roraíma'\n      }, {\n        value: 'SC',\n        label: 'Santa Catarina'\n      }, {\n        value: 'SP',\n        label: 'São Paulo'\n      }, {\n        value: 'SE',\n        label: 'Sergipe'\n      }, {\n        value: 'TO',\n        label: 'Tocantins'\n      }],\n      endereco: {\n        cep: '',\n        rua: '',\n        numero: '',\n        complemento: '',\n        bairro: '',\n        cidade: '',\n        uf: '',\n        pais: ''\n      },\n      usuario_logado: {\n        profile: {\n          name: ''\n        },\n        emails: [{\n          address: ''\n        }]\n      }\n    };\n  },\n  mounted: function () {\n    console.log(this.$store.state.user.user, '(this.$store.state.user.user');\n    this.usuario_logado = this.$store.state.user.user;\n    console.log(this.usuario_logado.profile);\n\n    if (this.usuario_logado.profile.endereco) {\n      this.endereco = this.usuario_logado.profile.endereco;\n    }\n  },\n  methods: {\n    verificarCEP: function _callee(usuario_logado) {\n      var _usuario_logado$ender, _usuario_logado$ender2;\n\n      var _ref, data;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              debbuger;\n\n              if (!(((_usuario_logado$ender = usuario_logado.endereco) === null || _usuario_logado$ender === void 0 ? void 0 : (_usuario_logado$ender2 = _usuario_logado$ender.cep) === null || _usuario_logado$ender2 === void 0 ? void 0 : _usuario_logado$ender2.length) == 9)) {\n                _context.next = 17;\n                break;\n              }\n\n              _context.prev = 2;\n              loading.value = true;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(getCep(usuario_logado.cep));\n\n            case 6:\n              _ref = _context.sent;\n              data = _ref.data;\n              usuario_logado.rua = data.rua;\n              usuario_logado.bairro = data.bairro;\n              usuario_logado.complemento = data.complemento;\n              usuario_logado.cidade = data.localidade;\n              usuario_logado.uf = data.uf;\n\n              if (data.erro) {\n                swal.fire({\n                  icon: 'error',\n                  showCloseButton: true,\n                  title: \"CEP \" + endereco.cep + \" n\\xE3o encontrado\"\n                });\n              }\n\n            case 14:\n              _context.prev = 14;\n              loading.value = false;\n              return _context.finish(14);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[2,, 14, 17]]);\n    },\n    pegarAInicialDoOPrimeiroEUltimoNome: function (texto) {\n      if (texto) {\n        var texto2 = '';\n        texto2 = texto.toString().trim();\n\n        if (texto2.indexOf(' ') >= 0) {\n          var textos = [];\n          textos = texto2.split(' ');\n          var qtdTextos = 0;\n          qtdTextos = textos.length;\n          var iniciais = textos[0][0] + textos[qtdTextos - 1][0];\n          return iniciais.toUpperCase();\n        } else {\n          return (texto2[0] + texto2[1]).toUpperCase();\n        }\n      }\n    },\n    salvarDados: function () {\n      var _this = this;\n\n      try {\n        var usuario = {\n          name: this.usuario_logado.profile.name,\n          email: this.usuario_logado.emails[0].address,\n          documento: this.usuario_logado.profile.documento,\n          telefone: this.usuario_logado.profile.celular,\n          endereco: {\n            cep: this.endereco.cep || '',\n            rua: this.endereco.rua || '',\n            numero: this.endereco.numero || '',\n            complemento: this.endereco.complemento || '',\n            bairro: this.endereco.bairro || '',\n            cidade: this.endereco.cidade || '',\n            uf: this.endereco.uf || '',\n            pais: this.endereco.pais || ''\n          }\n        };\n        Meteor.call('editarUsuario', usuario, function (error) {\n          if (error) {\n            _this.$q.notify({\n              progress: true,\n              message: error.reason,\n              type: 'error',\n              color: 'red',\n              timeout: 3500,\n              multiLine: false,\n              icon: 'warning'\n            });\n          } else {\n            _this.$q.notify({\n              progress: true,\n              message: 'Salvo com sucesso',\n              type: 'success',\n              color: 'green',\n              timeout: 3500,\n              multiLine: false,\n              icon: 'check'\n            });\n\n            _this.$router.push('/produtos');\n          }\n        });\n      } finally {}\n    }\n  }\n});","map":{"version":3,"sources":["/Users/bernardosalgado/Desktop/busqpets/template/imports/ui/DadosPessoais.vue"],"names":["_regeneratorRuntime","module","link","default","v","QInput","exportDefault","components","data","states","value","label","endereco","cep","rua","numero","complemento","bairro","cidade","uf","pais","usuario_logado","profile","name","emails","address","mounted","console","log","$store","state","user","methods","verificarCEP","debbuger","length","loading","getCep","localidade","erro","swal","fire","icon","showCloseButton","title","pegarAInicialDoOPrimeiroEUltimoNome","texto","texto2","toString","trim","indexOf","textos","split","qtdTextos","iniciais","toUpperCase","salvarDados","usuario","email","documento","telefone","celular","Meteor","call","error","$q","notify","progress","message","reason","type","color","timeout","multiLine","$router","push"],"mappings":"AAAA,IAAIA,mBAAJ;;AAAwBC,MAAM,CAACC,IAAP,CAAY,4BAAZ,EAAyC;AAACC,EAAAA,OAAO,EAAC,UAASC,CAAT,EAAW;AAACJ,IAAAA,mBAAmB,GAACI,CAApB;AAAsB;AAA3C,CAAzC,EAAsF,CAAtF;AAAxB,IAAIC,MAAJ;AAAWJ,MAAM,CAACC,IAAP,CAAY,QAAZ,EAAqB;AAACG,EAAAA,MAAM,EAAC,UAASD,CAAT,EAAW;AAACC,IAAAA,MAAM,GAACD,CAAP;AAAS;AAA7B,CAArB,EAAoD,CAApD;AAAXH,MAAM,CAACK,aAAP,CAIe;AACbC,EAAAA,UAAU,EAAE;AACVF,IAAAA,MAAM,EAANA;AADU,GADC;AAIbG,EAAAA,IAJa,cAIN;AACL,WAAO;AACLC,MAAAA,MAAM,EAAE,CACN;AAAEC,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,KAAK,EAAE;AAAtB,OADM,EAEN;AAAED,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,KAAK,EAAE;AAAtB,OAFM,EAGN;AAAED,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,KAAK,EAAE;AAAtB,OAHM,EAIN;AAAED,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,KAAK,EAAE;AAAtB,OAJM,EAKN;AAAED,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,KAAK,EAAE;AAAtB,OALM,EAMN;AAAED,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,KAAK,EAAE;AAAtB,OANM,EAON;AAAED,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,KAAK,EAAE;AAAtB,OAPM,EAQN;AAAED,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,KAAK,EAAE;AAAtB,OARM,EASN;AAAED,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,KAAK,EAAE;AAAtB,OATM,EAUN;AAAED,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,KAAK,EAAE;AAAtB,OAVM,EAWN;AAAED,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,KAAK,EAAE;AAAtB,OAXM,EAYN;AAAED,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,KAAK,EAAE;AAAtB,OAZM,EAaN;AAAED,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,KAAK,EAAE;AAAtB,OAbM,EAcN;AAAED,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,KAAK,EAAE;AAAtB,OAdM,EAeN;AAAED,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,KAAK,EAAE;AAAtB,OAfM,EAgBN;AAAED,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,KAAK,EAAE;AAAtB,OAhBM,EAiBN;AAAED,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,KAAK,EAAE;AAAtB,OAjBM,EAkBN;AAAED,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,KAAK,EAAE;AAAtB,OAlBM,EAmBN;AAAED,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,KAAK,EAAE;AAAtB,OAnBM,EAoBN;AAAED,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,KAAK,EAAE;AAAtB,OApBM,EAqBN;AAAED,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,KAAK,EAAE;AAAtB,OArBM,EAsBN;AAAED,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,KAAK,EAAE;AAAtB,OAtBM,EAuBN;AAAED,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,KAAK,EAAE;AAAtB,OAvBM,EAwBN;AAAED,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,KAAK,EAAE;AAAtB,OAxBM,EAyBN;AAAED,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,KAAK,EAAE;AAAtB,OAzBM,EA0BN;AAAED,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,KAAK,EAAE;AAAtB,OA1BM,EA2BN;AAAED,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,KAAK,EAAE;AAAtB,OA3BM,CADH;AA8BLC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,GAAG,EAAE,EADG;AAERC,QAAAA,GAAG,EAAE,EAFG;AAGRC,QAAAA,MAAM,EAAE,EAHA;AAIRC,QAAAA,WAAW,EAAE,EAJL;AAKRC,QAAAA,MAAM,EAAE,EALA;AAMRC,QAAAA,MAAM,EAAE,EANA;AAORC,QAAAA,EAAE,EAAE,EAPI;AAQRC,QAAAA,IAAI,EAAE;AARE,OA9BL;AAwCLC,MAAAA,cAAc,EAAE;AACdC,QAAAA,OAAO,EAAE;AACPC,UAAAA,IAAI,EAAC;AADE,SADK;AAIdC,QAAAA,MAAM,EAAC,CAAC;AAACC,UAAAA,OAAO,EAAC;AAAT,SAAD;AAJO;AAxCX,KAAP;AA+CD,GApDY;AAqDbC,EAAAA,OArDa,cAqDH;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,MAAL,CAAYC,KAAZ,CAAkBC,IAAlB,CAAuBA,IAAnC,EAAyC,8BAAzC;AACA,SAAKV,cAAL,GAAsB,KAAKQ,MAAL,CAAYC,KAAZ,CAAkBC,IAAlB,CAAuBA,IAA7C;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,cAAL,CAAoBC,OAAhC;;AACA,QAAI,KAAKD,cAAL,CAAoBC,OAApB,CAA4BV,QAAhC,EAA0C;AACxC,WAAKA,QAAL,GAAgB,KAAKS,cAAL,CAAoBC,OAApB,CAA4BV,QAA5C;AACD;AACF,GA5DY;AA6DboB,EAAAA,OAAO,EAAE;AACDC,IAAAA,YADC,mBACYZ,cADZ;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAELa,cAAAA,QAAQ;;AAFH,oBAGD,0BAAAb,cAAc,CAACT,QAAf,0GAAyBC,GAAzB,kFAA8BsB,MAA9B,KAAwC,CAHvC;AAAA;AAAA;AAAA;;AAAA;AAKDC,cAAAA,OAAO,CAAC1B,KAAR,GAAgB,IAAhB;AALC;AAAA,+CAMsB2B,MAAM,CAAChB,cAAc,CAACR,GAAhB,CAN5B;;AAAA;AAAA;AAMOL,cAAAA,IANP,QAMOA,IANP;AAODa,cAAAA,cAAc,CAACP,GAAf,GAAqBN,IAAI,CAACM,GAA1B;AACAO,cAAAA,cAAc,CAACJ,MAAf,GAAwBT,IAAI,CAACS,MAA7B;AACAI,cAAAA,cAAc,CAACL,WAAf,GAA6BR,IAAI,CAACQ,WAAlC;AACAK,cAAAA,cAAc,CAACH,MAAf,GAAwBV,IAAI,CAAC8B,UAA7B;AACAjB,cAAAA,cAAc,CAACF,EAAf,GAAoBX,IAAI,CAACW,EAAzB;;AACA,kBAAIX,IAAI,CAAC+B,IAAT,EAAe;AACbC,gBAAAA,IAAI,CAACC,IAAL,CAAU;AACRC,kBAAAA,IAAI,EAAE,OADE;AAERC,kBAAAA,eAAe,EAAE,IAFT;AAGRC,kBAAAA,KAAK,WAAShC,QAAQ,CAACC,GAAlB;AAHG,iBAAV;AAKD;;AAlBA;AAAA;AAoBDuB,cAAAA,OAAO,CAAC1B,KAAR,GAAgB,KAAhB;AApBC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyBPmC,IAAAA,mCAzBO,YAyB8BC,KAzB9B,EAyBqC;AAC1C,UAAIA,KAAJ,EAAW;AACT,YAAIC,MAAM,GAAG,EAAb;AACAA,QAAAA,MAAM,GAAGD,KAAK,CAACE,QAAN,GAAiBC,IAAjB,EAAT;;AACA,YAAIF,MAAM,CAACG,OAAP,CAAe,GAAf,KAAuB,CAA3B,EAA8B;AAC5B,cAAIC,MAAM,GAAG,EAAb;AACAA,UAAAA,MAAM,GAAGJ,MAAM,CAACK,KAAP,CAAa,GAAb,CAAT;AACA,cAAIC,SAAS,GAAG,CAAhB;AACAA,UAAAA,SAAS,GAAGF,MAAM,CAAChB,MAAnB;AACA,cAAMmB,QAAQ,GAAGH,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,IAAeA,MAAM,CAACE,SAAS,GAAG,CAAb,CAAN,CAAsB,CAAtB,CAAhC;AACA,iBAAQC,QAAD,CAAWC,WAAX,EAAP;AACD,SAPD,MAOO;AACL,iBAAQ,CAACR,MAAM,CAAC,CAAD,CAAN,GAAYA,MAAM,CAAC,CAAD,CAAnB,EAAwBQ,WAAxB,EAAR;AACD;AACF;AACF,KAxCM;AA0CPC,IAAAA,WA1CO,cA0CQ;AAAA;;AACb,UAAI;AACF,YAAMC,OAAO,GAAG;AACdlC,UAAAA,IAAI,EAAE,KAAKF,cAAL,CAAoBC,OAApB,CAA4BC,IADpB;AAEdmC,UAAAA,KAAK,EAAE,KAAKrC,cAAL,CAAoBG,MAApB,CAA2B,CAA3B,EAA8BC,OAFvB;AAGdkC,UAAAA,SAAS,EAAE,KAAKtC,cAAL,CAAoBC,OAApB,CAA4BqC,SAHzB;AAIdC,UAAAA,QAAQ,EAAE,KAAKvC,cAAL,CAAoBC,OAApB,CAA4BuC,OAJxB;AAKdjD,UAAAA,QAAQ,EAAE;AACRC,YAAAA,GAAG,EAAE,KAAKD,QAAL,CAAcC,GAAd,IAAqB,EADlB;AAERC,YAAAA,GAAG,EAAE,KAAKF,QAAL,CAAcE,GAAd,IAAqB,EAFlB;AAGRC,YAAAA,MAAM,EAAE,KAAKH,QAAL,CAAcG,MAAd,IAAwB,EAHxB;AAIRC,YAAAA,WAAW,EAAE,KAAKJ,QAAL,CAAcI,WAAd,IAA6B,EAJlC;AAKRC,YAAAA,MAAM,EAAE,KAAKL,QAAL,CAAcK,MAAd,IAAwB,EALxB;AAMRC,YAAAA,MAAM,EAAE,KAAKN,QAAL,CAAcM,MAAd,IAAwB,EANxB;AAORC,YAAAA,EAAE,EAAE,KAAKP,QAAL,CAAcO,EAAd,IAAoB,EAPhB;AAQRC,YAAAA,IAAI,EAAE,KAAKR,QAAL,CAAcQ,IAAd,IAAsB;AARpB;AALI,SAAhB;AAiBA0C,QAAAA,MAAM,CAACC,IAAP,CAAY,eAAZ,EAA6BN,OAA7B,EAAqC,UAACO,KAAD,EAAS;AAC5C,cAAGA,KAAH,EAAS;AACP,YAAA,KAAI,CAACC,EAAL,CAAQC,MAAR,CAAe;AACbC,cAAAA,QAAQ,EAAE,IADG;AAEbC,cAAAA,OAAO,EAAEJ,KAAK,CAACK,MAFF;AAGbC,cAAAA,IAAI,EAAE,OAHO;AAIbC,cAAAA,KAAK,EAAE,KAJM;AAKbC,cAAAA,OAAO,EAAE,IALI;AAMbC,cAAAA,SAAS,EAAE,KANE;AAOb/B,cAAAA,IAAI,EAAE;AAPO,aAAf;AASD,WAVD,MAWI;AACF,YAAA,KAAI,CAACuB,EAAL,CAAQC,MAAR,CAAe;AACbC,cAAAA,QAAQ,EAAE,IADG;AAEbC,cAAAA,OAAO,EAAE,mBAFI;AAGbE,cAAAA,IAAI,EAAE,SAHO;AAIbC,cAAAA,KAAK,EAAE,OAJM;AAKbC,cAAAA,OAAO,EAAE,IALI;AAMbC,cAAAA,SAAS,EAAE,KANE;AAOb/B,cAAAA,IAAI,EAAE;AAPO,aAAf;;AASA,YAAA,KAAI,CAACgC,OAAL,CAAaC,IAAb,CAAkB,WAAlB;AACD;AACF,SAxBD;AAyBD,OA3CD,SA2CU,CAAE;AACb;AAvFM;AA7DI,CAJf","sourcesContent":["\nimport { QInput } from 'quasar';\n// import { getCep } from 'template/imports/server/cep.js'\n\nexport default {\n  components: {\n    QInput\n  },\n  data() {\n    return {\n      states: [\n        { value: 'AC', label: 'Acre' },\n        { value: 'AL', label: 'Alagoas' },\n        { value: 'AP', label: 'Amapá' },\n        { value: 'AM', label: 'Amazonas' },\n        { value: 'BA', label: 'Bahia' },\n        { value: 'CE', label: 'Ceará' },\n        { value: 'DF', label: 'Distrito Federal' },\n        { value: 'ES', label: 'Espírito Santo' },\n        { value: 'GO', label: 'Goías' },\n        { value: 'MA', label: 'Maranhão' },\n        { value: 'MT', label: 'Mato Grosso' },\n        { value: 'MS', label: 'Mato Grosso do Sul' },\n        { value: 'MG', label: 'Minas Gerais' },\n        { value: 'PA', label: 'Pará' },\n        { value: 'PB', label: 'Paraíba' },\n        { value: 'PR', label: 'Paraná' },\n        { value: 'PE', label: 'Pernambuco' },\n        { value: 'PI', label: 'Piauí' },\n        { value: 'RJ', label: 'Rio de Janeiro' },\n        { value: 'RN', label: 'Rio Grande do Norte' },\n        { value: 'RS', label: 'Rio Grande do Sul' },\n        { value: 'RO', label: 'Rondônia' },\n        { value: 'RR', label: 'Roraíma' },\n        { value: 'SC', label: 'Santa Catarina' },\n        { value: 'SP', label: 'São Paulo' },\n        { value: 'SE', label: 'Sergipe' },\n        { value: 'TO', label: 'Tocantins' },\n      ],\n      endereco: {\n        cep: '',\n        rua: '',\n        numero: '',\n        complemento: '',\n        bairro: '',\n        cidade: '',\n        uf: '',\n        pais: ''\n      },\n      usuario_logado: {\n        profile: {\n          name:'',\n        },\n        emails:[{address:''}],\n      },\n    }\n  },\n  mounted() {\n    console.log(this.$store.state.user.user, '(this.$store.state.user.user')\n    this.usuario_logado = this.$store.state.user.user;\n    console.log(this.usuario_logado.profile)\n    if (this.usuario_logado.profile.endereco) {\n      this.endereco = this.usuario_logado.profile.endereco\n    } \n  },\n  methods: {\n    async verificarCEP(usuario_logado) {\n      debbuger\n      if (usuario_logado.endereco?.cep?.length == 9) {\n        try {\n          loading.value = true\n          const { data } = await getCep(usuario_logado.cep)\n          usuario_logado.rua = data.rua\n          usuario_logado.bairro = data.bairro\n          usuario_logado.complemento = data.complemento\n          usuario_logado.cidade = data.localidade\n          usuario_logado.uf = data.uf\n          if (data.erro) {\n            swal.fire({\n              icon: 'error',\n              showCloseButton: true,\n              title: `CEP ${endereco.cep} não encontrado`,\n            })\n          }\n        } finally {\n          loading.value = false\n        }\n      }\n    },\n\n    pegarAInicialDoOPrimeiroEUltimoNome (texto) {\n      if (texto) {\n        let texto2 = '';\n        texto2 = texto.toString().trim();\n        if (texto2.indexOf(' ') >= 0) {\n          let textos = [];\n          textos = texto2.split(' ');\n          let qtdTextos = 0;\n          qtdTextos = textos.length;\n          const iniciais = textos[0][0] + textos[qtdTextos - 1][0];\n          return (iniciais).toUpperCase()\n        } else {\n          return ((texto2[0] + texto2[1]).toUpperCase())\n        }\n      }\n    },\n\n    salvarDados () {\n      try {\n        const usuario = {\n          name: this.usuario_logado.profile.name,\n          email: this.usuario_logado.emails[0].address,\n          documento: this.usuario_logado.profile.documento,\n          telefone: this.usuario_logado.profile.celular,\n          endereco: {\n            cep: this.endereco.cep || '',\n            rua: this.endereco.rua || '',\n            numero: this.endereco.numero || '',\n            complemento: this.endereco.complemento || '',\n            bairro: this.endereco.bairro || '',\n            cidade: this.endereco.cidade || '',\n            uf: this.endereco.uf || '',\n            pais: this.endereco.pais || ''\n          }\n        };\n\n        Meteor.call('editarUsuario', usuario,(error)=>{\n          if(error){ \n            this.$q.notify({\n              progress: true,\n              message: error.reason,\n              type: 'error',\n              color: 'red',\n              timeout: 3500,\n              multiLine: false,\n              icon: 'warning'\n            })\n          }\n          else{\n            this.$q.notify({\n              progress: true,\n              message: 'Salvo com sucesso',\n              type: 'success',\n              color: 'green',\n              timeout: 3500,\n              multiLine: false,\n              icon: 'check'\n            })\n            this.$router.push('/produtos')\n          }\n        })\n      } finally {}\n    }\n  }\n}\n\n"]},"sourceType":"module","hash":"a99898fe85d9fc2a42f5bbfa8d90134b6cdcef6b"}
